0 info it worked if it ends with ok
1 verbose cli [ '/usr/bin/node', '/usr/bin/npm', 'install', 'ffi', '-g' ]
2 info using npm@1.3.8
3 info using node@v0.10.18
4 verbose cache add [ 'ffi', null ]
5 verbose cache add name=undefined spec="ffi" args=["ffi",null]
6 verbose parsed url { protocol: null,
6 verbose parsed url   slashes: null,
6 verbose parsed url   auth: null,
6 verbose parsed url   host: null,
6 verbose parsed url   port: null,
6 verbose parsed url   hostname: null,
6 verbose parsed url   hash: null,
6 verbose parsed url   search: null,
6 verbose parsed url   query: null,
6 verbose parsed url   pathname: 'ffi',
6 verbose parsed url   path: 'ffi',
6 verbose parsed url   href: 'ffi' }
7 silly lockFile 1370ebd5-ffi ffi
8 verbose lock ffi /home/tom/.npm/1370ebd5-ffi.lock
9 silly lockFile 1370ebd5-ffi ffi
10 silly lockFile 1370ebd5-ffi ffi
11 verbose addNamed [ 'ffi', '' ]
12 verbose addNamed [ null, '*' ]
13 silly lockFile c8c4c2da-ffi ffi@
14 verbose lock ffi@ /home/tom/.npm/c8c4c2da-ffi.lock
15 silly addNameRange { name: 'ffi', range: '*', hasData: false }
16 verbose url raw ffi
17 verbose url resolving [ 'https://registry.npmjs.org/', './ffi' ]
18 verbose url resolved https://registry.npmjs.org/ffi
19 info trying registry request attempt 1 at 20:20:30
20 verbose etag "4DWX2C26HG41L232I5SNKNMKR"
21 http GET https://registry.npmjs.org/ffi
22 http 304 https://registry.npmjs.org/ffi
23 silly registry.get cb [ 304,
23 silly registry.get   { server: 'CouchDB/1.3.1 (Erlang OTP/R15B03)',
23 silly registry.get     etag: '"4DWX2C26HG41L232I5SNKNMKR"',
23 silly registry.get     date: 'Sun, 22 Sep 2013 19:20:33 GMT',
23 silly registry.get     'content-length': '0' } ]
24 verbose etag ffi from cache
25 silly addNameRange number 2 { name: 'ffi', range: '*', hasData: true }
26 silly addNameRange versions [ 'ffi',
26 silly addNameRange   [ '1.0.0',
26 silly addNameRange     '1.0.1',
26 silly addNameRange     '1.0.3',
26 silly addNameRange     '1.0.4',
26 silly addNameRange     '1.0.5',
26 silly addNameRange     '1.0.6',
26 silly addNameRange     '1.0.7',
26 silly addNameRange     '1.1.0',
26 silly addNameRange     '1.1.1',
26 silly addNameRange     '1.1.2',
26 silly addNameRange     '1.1.3',
26 silly addNameRange     '1.2.0',
26 silly addNameRange     '1.2.1',
26 silly addNameRange     '1.2.2',
26 silly addNameRange     '1.2.3',
26 silly addNameRange     '1.2.4',
26 silly addNameRange     '1.2.5' ] ]
27 verbose addNamed [ 'ffi', '1.2.5' ]
28 verbose addNamed [ '1.2.5', '1.2.5' ]
29 silly lockFile b02bef08-ffi-1-2-5 ffi@1.2.5
30 verbose lock ffi@1.2.5 /home/tom/.npm/b02bef08-ffi-1-2-5.lock
31 silly lockFile b02bef08-ffi-1-2-5 ffi@1.2.5
32 silly lockFile b02bef08-ffi-1-2-5 ffi@1.2.5
33 silly lockFile c8c4c2da-ffi ffi@
34 silly lockFile c8c4c2da-ffi ffi@
35 silly resolved [ { name: 'ffi',
35 silly resolved     version: '1.2.5',
35 silly resolved     authors:
35 silly resolved      [ 'Rick Branson',
35 silly resolved        'Nathan Rajlich <nathan@tootallnate.net> (http://tootallnate.net)' ],
35 silly resolved     description: 'A foreign function interface (FFI) for Node.js',
35 silly resolved     homepage: 'http://github.com/rbranson/node-ffi',
35 silly resolved     engines: { node: '>=0.6.0' },
35 silly resolved     main: './lib/ffi',
35 silly resolved     dependencies: { bindings: '*', debug: '*', ref: '*', 'ref-struct': '*' },
35 silly resolved     devDependencies: { 'expect.js': '*', mocha: '*', 'ref-array': '*' },
35 silly resolved     scripts:
35 silly resolved      { test: 'node-gyp rebuild --directory test && mocha -gc --reporter spec',
35 silly resolved        install: 'node-gyp rebuild' },
35 silly resolved     repository: { type: 'git', url: 'http://github.com/rbranson/node-ffi.git' },
35 silly resolved     bugs: { url: 'http://github.com/rbranson/node-ffi/issues' },
35 silly resolved     gypfile: true,
35 silly resolved     readme: 'node-ffi\n========\n### Node.js Foreign Function Interface\n[![Build Status](https://travis-ci.org/rbranson/node-ffi.png?branch=master)](https://travis-ci.org/rbranson/node-ffi)\n\n`node-ffi` is a Node.js addon for loading and calling dynamic libraries using\npure JavaScript. It can be used to create bindings to native libraries without\nwriting any C++ code.\n\nIt also simplifies the augmentation of node.js with C code as it takes care of\nhandling the translation of types across JavaScript and C, which can add reams\nof boilerplate code to your otherwise simple C. See the `example/factorial`\nfor an example of this use case.\n\n**WARNING**: node-ffi assumes you know what you\'re doing. You can pretty easily\ncreate situations where you will segfault the interpreter and unless you\'ve got\nC debugger skills, you probably won\'t know what\'s going on.\n\nExample\n-------\n\n``` js\nvar ffi = require(\'ffi\');\n\nvar libm = ffi.Library(\'libm\', {\n  \'ceil\': [ \'double\', [ \'double\' ] ]\n});\nlibm.ceil(1.5); // 2\n\n// You can also access just functions in the current process by passing a null\nvar current = ffi.Library(null, {\n  \'atoi\': [ \'int\', [ \'string\' ] ]\n});\ncurrent.atoi(\'1234\'); // 1234\n```\n\nFor a more detailed introduction, see the [node-ffi tutorial page][tutorial].\n\nRequirements\n------------\n\n * Linux, OS X, Windows, or Solaris.\n * `libffi` comes bundled with node-ffi; it does *not* need to be installed on your system.\n * The current version is tested to run on node v0.6, v0.7, and v0.8.\n\nInstallation\n------------\n\nMake sure you\'ve installed all the [necessary build\ntools](https://github.com/TooTallNate/node-gyp#installation) for your platform,\nthen invoke:\n\n``` bash\n$ npm install ffi\n```\n\nSource Install / Manual Compilation\n-----------------------------------\n\nTo compile from source it\'s easiest to use\n[`node-gyp`](https://github.com/TooTallNate/node-gyp):\n\n``` bash\n$ npm install -g node-gyp\n```\n\nNow you can compile `node-ffi`:\n\n``` bash\n$ git clone git://github.com/rbranson/node-ffi.git\n$ cd node-ffi\n$ node-gyp rebuild\n```\n\nTypes\n-----\n\nThe types that you specify in function declarations correspond to ref\'s types\nsystem. So [see its docs][ref-types] for\na reference if you are unfamiliar.\n\nV8 and 64-bit Types\n-------------------\n\nInternally, V8 stores integers that will fit into a 32-bit space in a 32-bit\ninteger, and those that fall outside of this get put into double-precision\nfloating point numbers. This is problematic because FP numbers are imprecise.\nTo get around this, the methods in node-ffi that deal with 64-bit integers return\nstrings and can accept strings as parameters.\n\nCall Overhead\n-------------\n\nThere is non-trivial overhead associated with FFI calls. Comparing a hard-coded\nbinding version of `strtoul()` to an FFI version of `strtoul()` shows that the\nnative hard-coded binding is orders of magnitude faster. So don\'t just use the\nC version of a function just because it\'s faster. There\'s a significant cost in\nFFI calls, so make them worth it.\n\nLicense\n-------\n\nMIT License. See the `LICENSE` file.\n\n[v1apichanges]: https://github.com/rbranson/node-ffi/wiki/API-changes-from-v0.x-to-v1.x\n[tutorial]: https://github.com/rbranson/node-ffi/wiki/Node-FFI-Tutorial\n[ref-types]: https://github.com/TooTallNate/ref#built-in-types\n',
35 silly resolved     readmeFilename: 'README.md',
35 silly resolved     _id: 'ffi@1.2.5',
35 silly resolved     _from: 'ffi@' } ]
36 info install ffi@1.2.5 into /usr/lib
37 info installOne ffi@1.2.5
38 info /usr/lib/node_modules/ffi unbuild
39 info preuninstall ffi@1.2.5
40 info uninstall ffi@1.2.5
41 verbose true,/usr/lib/node_modules,/usr/lib/node_modules unbuild ffi@1.2.5
42 info postuninstall ffi@1.2.5
43 info /usr/lib/node_modules/ffi unbuild
44 info preuninstall ffi@1.2.5
45 info uninstall ffi@1.2.5
46 verbose true,/usr/lib/node_modules,/usr/lib/node_modules unbuild ffi@1.2.5
47 info postuninstall ffi@1.2.5
48 error error rolling back Error: EACCES, unlink '/usr/lib/node_modules/ffi'
48 error error rolling back  ffi@1.2.5 { [Error: EACCES, unlink '/usr/lib/node_modules/ffi'] errno: 3, code: 'EACCES', path: '/usr/lib/node_modules/ffi' }
49 error Error: EACCES, unlink '/usr/lib/node_modules/ffi'
49 error  { [Error: EACCES, unlink '/usr/lib/node_modules/ffi'] errno: 3, code: 'EACCES', path: '/usr/lib/node_modules/ffi' }
50 error Please try running this command again as root/Administrator.
51 error System Linux 3.10.12-1-MANJARO
52 error command "/usr/bin/node" "/usr/bin/npm" "install" "ffi" "-g"
53 error cwd /opt/repos/ffi
54 error node -v v0.10.18
55 error npm -v 1.3.8
56 error path /usr/lib/node_modules/ffi
57 error code EACCES
58 error errno 3
59 error stack Error: EACCES, unlink '/usr/lib/node_modules/ffi'
60 verbose exit [ 3, true ]
